#!/bin/bash

# Post-merge hook to help with dependency updates and system maintenance
# This runs after successful git merge operations

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

print_status "$BLUE" "üîÑ Post-merge hook running..."

# Check if flake.lock was updated
if git diff --name-only HEAD@{1} HEAD | grep -q "flake.lock"; then
    print_status "$YELLOW" "üì¶ flake.lock has been updated!"
    print_status "$YELLOW" "   Consider running: just update"
    print_status "$YELLOW" "   Or check changes: git diff HEAD@{1} HEAD -- flake.lock"
fi

# Check if flake.nix was updated
if git diff --name-only HEAD@{1} HEAD | grep -q "flake.nix"; then
    print_status "$YELLOW" "‚öôÔ∏è  flake.nix has been updated!"
    print_status "$YELLOW" "   Major configuration changes detected"
fi

# Check if any host configurations were updated
if git diff --name-only HEAD@{1} HEAD | grep -q "modules/hosts/"; then
    print_status "$YELLOW" "üè† Host configurations have been updated!"
    print_status "$YELLOW" "   Consider rebuilding affected hosts"
fi

# Check if any system-level modules were updated
if git diff --name-only HEAD@{1} HEAD | grep -qE "modules/(darwin|nixos)/"; then
    print_status "$YELLOW" "üîß System modules have been updated!"
    print_status "$YELLOW" "   System-level changes detected"
fi

# Suggest rebuild if significant changes
changed_files=$(git diff --name-only HEAD@{1} HEAD)
if echo "$changed_files" | grep -qE "\.(nix)$"; then
    print_status "$GREEN" "üí° Nix configuration files changed. Consider running:"
    print_status "$GREEN" "   ‚Ä¢ just switch (to rebuild current host)"
    print_status "$GREEN" "   ‚Ä¢ just test (to run configuration tests)"
    print_status "$GREEN" "   ‚Ä¢ just check (to validate flake)"
fi

# Clear evaluation cache if major changes detected
major_changes=false
if echo "$changed_files" | grep -qE "(flake\.(nix|lock)|modules/)" || [ $(echo "$changed_files" | wc -l) -gt 10 ]; then
    major_changes=true
fi

if [ "$major_changes" = true ]; then
    print_status "$BLUE" "üóëÔ∏è  Major changes detected, clearing evaluation cache..."
    if [ -f "./utils/clear-eval-cache.sh" ]; then
        ./utils/clear-eval-cache.sh
        print_status "$GREEN" "‚úÖ Evaluation cache cleared"
    else
        print_status "$YELLOW" "‚ö†Ô∏è  clear-eval-cache.sh not found, skipping cache clear"
    fi
fi

# Check for SOPS secrets changes
if git diff --name-only HEAD@{1} HEAD | grep -q "secrets/"; then
    print_status "$YELLOW" "üîê SOPS secrets have been updated!"
    print_status "$YELLOW" "   Verify encryption: sops -d secrets/secrets.yaml"
fi

print_status "$GREEN" "‚úÖ Post-merge hook completed"